{
    "docs": [
        {
            "location": "/", 
            "text": "Principios\n\n\n1.  Mostly RESTful\n\n\nPara dise\u00f1ar la API de ODIN se ha tomado como referencia la definici\u00f3n de REST especificada en el \ncap\u00edtulo n\u00ba 5\n de la tesis doctoral de Roy Fielding. No obstante, se podr\u00e1 adoptar otro enfoque si en aspectos particulares \u00e9ste resulta m\u00e1s apropiado seg\u00fan las necesidades del caso.\n\n\n2. Simplicidad\n\n\n\n\nS\u00f3lo puede haber una URL para cada recurso.\n\n\nDeben emplearse nombres concretos y autodescriptivos.\n\n\nNo se admitir\u00e1n abreviaturas, excepto aquellas muy ampliamente utilizadas y conocidas (por ejemplo: min, max).\n\n\nSi bien se prevee dar soporte a muchos tipos de formato para las responses, en la primera versi\u00f3n s\u00f3lo se proveer\u00e1n respuestas JSON.\n\n\n\n\n3. Consistencia\n\n\nLas normas aqu\u00ed descriptas deben aplicarse de manera uniforme y exhaustiva al desarrollar la API.\n\n\n4. Abstracci\u00f3n\n\n\nNo necesariamente debe haber un endpoint por cada tabla de la base de datos, ni cada par\u00e1metro debe equivaler a un campo de una tabla, ni mucho menos el resultado de una query a la base de datos ser serializado y despachado sin m\u00e1s. \n\n\nPor un lado es preciso limitar los datos que se env\u00edan en la response, y por otro hay que tener en cuenta los casos de uso y las necesidades de datos de los clientes, por ejemplo proveyendo campos calculados o construidos a partir de otros. Todo ello contribuye a mantener bajo control el tama\u00f1o de las responses, a reforzar la seguridad de la API y a minimizar el n\u00famero de requests.\n\n\nLa API debe ser una capa de abstracci\u00f3n sobre los detalles de implementaci\u00f3n de ODIN, limitando y estandarizando lo que se expone a trav\u00e9s de ella. En otras palabras, la API debe implementar el patr\u00f3n Fa\u00e7ade.\n\n\n5. Autodescriptividad\n\n\nLa API debe poder navegarse sin necesidad de acudir a la documentaci\u00f3n, y a la vez documentarse a s\u00ed misma. Esto es posible a trav\u00e9s de la implementaci\u00f3n de Hypermedia con el m\u00e9todo OPTION, que adem\u00e1s tiene la ventaja de que ya no es necesario tener que versionar la API. Implementar OPTION posibilita incluso la generaci\u00f3n autom\u00e1tica de la UI de los clientes.\n\n\n6. Modularidad\n\n\nEl n\u00facleo de funcionalidad m\u00e1s elemental de la API debe implementarse en una serie de m\u00f3dulos funcional y l\u00f3gicamente distintos, que sea posible desarrollar por separado. Estos m\u00f3dulos no necesariamente ser\u00e1n desacoplables. La funcionalidad restante se desarrollar\u00e1 como plugins, que s\u00ed deben ser desacoplables.\n\n\nUna de las ventajas de la modularidad y el empleo de la estructura core/plugins es que la aplicaci\u00f3n es f\u00e1cilmente actualizable, y en el caso de ODIN esta cualidad es muy deseable.\n\n\n7. Extensibilidad\n\n\nDebe ser posible extender y/o modificar la API mediante plugins. El sistema de plugins debe implementar el patr\u00f3n Inversion of Control, y los plugins no deben poder alterar el c\u00f3digo fuente de la API.\n\n\nConvenciones\n\n\nTBD\n\n\nLicencia\n\n\nLa API de ODIN ser\u00e1 un proyecto de c\u00f3digo abierto y se ofrecer\u00e1 bajo la licencia MIT.", 
            "title": "Home"
        }, 
        {
            "location": "/#principios", 
            "text": "", 
            "title": "Principios"
        }, 
        {
            "location": "/#1-mostly-restful", 
            "text": "Para dise\u00f1ar la API de ODIN se ha tomado como referencia la definici\u00f3n de REST especificada en el  cap\u00edtulo n\u00ba 5  de la tesis doctoral de Roy Fielding. No obstante, se podr\u00e1 adoptar otro enfoque si en aspectos particulares \u00e9ste resulta m\u00e1s apropiado seg\u00fan las necesidades del caso.", 
            "title": "1.  Mostly RESTful"
        }, 
        {
            "location": "/#2-simplicidad", 
            "text": "S\u00f3lo puede haber una URL para cada recurso.  Deben emplearse nombres concretos y autodescriptivos.  No se admitir\u00e1n abreviaturas, excepto aquellas muy ampliamente utilizadas y conocidas (por ejemplo: min, max).  Si bien se prevee dar soporte a muchos tipos de formato para las responses, en la primera versi\u00f3n s\u00f3lo se proveer\u00e1n respuestas JSON.", 
            "title": "2. Simplicidad"
        }, 
        {
            "location": "/#3-consistencia", 
            "text": "Las normas aqu\u00ed descriptas deben aplicarse de manera uniforme y exhaustiva al desarrollar la API.", 
            "title": "3. Consistencia"
        }, 
        {
            "location": "/#4-abstraccion", 
            "text": "No necesariamente debe haber un endpoint por cada tabla de la base de datos, ni cada par\u00e1metro debe equivaler a un campo de una tabla, ni mucho menos el resultado de una query a la base de datos ser serializado y despachado sin m\u00e1s.   Por un lado es preciso limitar los datos que se env\u00edan en la response, y por otro hay que tener en cuenta los casos de uso y las necesidades de datos de los clientes, por ejemplo proveyendo campos calculados o construidos a partir de otros. Todo ello contribuye a mantener bajo control el tama\u00f1o de las responses, a reforzar la seguridad de la API y a minimizar el n\u00famero de requests.  La API debe ser una capa de abstracci\u00f3n sobre los detalles de implementaci\u00f3n de ODIN, limitando y estandarizando lo que se expone a trav\u00e9s de ella. En otras palabras, la API debe implementar el patr\u00f3n Fa\u00e7ade.", 
            "title": "4. Abstracci\u00f3n"
        }, 
        {
            "location": "/#5-autodescriptividad", 
            "text": "La API debe poder navegarse sin necesidad de acudir a la documentaci\u00f3n, y a la vez documentarse a s\u00ed misma. Esto es posible a trav\u00e9s de la implementaci\u00f3n de Hypermedia con el m\u00e9todo OPTION, que adem\u00e1s tiene la ventaja de que ya no es necesario tener que versionar la API. Implementar OPTION posibilita incluso la generaci\u00f3n autom\u00e1tica de la UI de los clientes.", 
            "title": "5. Autodescriptividad"
        }, 
        {
            "location": "/#6-modularidad", 
            "text": "El n\u00facleo de funcionalidad m\u00e1s elemental de la API debe implementarse en una serie de m\u00f3dulos funcional y l\u00f3gicamente distintos, que sea posible desarrollar por separado. Estos m\u00f3dulos no necesariamente ser\u00e1n desacoplables. La funcionalidad restante se desarrollar\u00e1 como plugins, que s\u00ed deben ser desacoplables.  Una de las ventajas de la modularidad y el empleo de la estructura core/plugins es que la aplicaci\u00f3n es f\u00e1cilmente actualizable, y en el caso de ODIN esta cualidad es muy deseable.", 
            "title": "6. Modularidad"
        }, 
        {
            "location": "/#7-extensibilidad", 
            "text": "Debe ser posible extender y/o modificar la API mediante plugins. El sistema de plugins debe implementar el patr\u00f3n Inversion of Control, y los plugins no deben poder alterar el c\u00f3digo fuente de la API.", 
            "title": "7. Extensibilidad"
        }, 
        {
            "location": "/#convenciones", 
            "text": "TBD", 
            "title": "Convenciones"
        }, 
        {
            "location": "/#licencia", 
            "text": "La API de ODIN ser\u00e1 un proyecto de c\u00f3digo abierto y se ofrecer\u00e1 bajo la licencia MIT.", 
            "title": "Licencia"
        }, 
        {
            "location": "/key-features/", 
            "text": "1. URLs\n\n\nLa API de ODIN es una API Hypermedia. Las URLs no deben ser construidas por el cliente, sino que \u00e9ste debe seguir las URLs provistas por la propia API.\n\n\n\n\n\n\nEstructura jer\u00e1rquica:\n de lo universal a lo particular. Se usa la barra \n/\n para indicar una relaci\u00f3n jer\u00e1rquica entre recursos.\n\n\nEjemplo:\n \nGET /datasets/5f86r\n\n\n\n\n\n\nGranularidad media:\n los recursos no deben estar anidados a m\u00e1s de dos niveles de profundidad.\n\n\nMal\n: \nGET /datasets/5f86r/resources/f9e3b\n\n\nBien\n: \nGET /datasets/5f86r/resources\n\n\n\n\n\n\nUso de sustantivos:\n para designar recursos. S\u00f3lo se deben emplear verbos para los endpoints de servicio.\n\n\nMal\n: \nGET /getAllDatasets\n\n\nBien\n: \nGET /datasets\n  \n\n\n\n\n\n\nUso de plurales:\n s\u00f3lo usar la forma singular de los sustantivos cuando no haya posibilidad alguna de que los recursos tengan m\u00faltiples.\n\n\nMal\n: \nGET /dataset\n\n\nBien\n: \nGET /datasets\n  \n\n\n\n\n\n\ncamelCase:\n lowerCamelCase para los par\u00e1metros, tanto en la url como en el body de la request.\n\n\nEjemplo\n: \nGET /datasets?filterBy=name\n\n\n\n\n\n\nOtras consideraciones\n\n\n\n\n\n\nNo se debe incluir una barra \n/\n al final de las URLs. La API no debe admitir URLs que las incluyan, ni incluirlas en los links hypermedia que genere.\n\n\nMal:\n \nGET /datasets/5f86r/\n\n\nBien:\n \nGET /datasets/5f86r\n\n\n\n\n\n\nNo se deben usar guiones bajos en las URLs. En el extremo caso de que no fuera posible o conveniente usar camelCase, usar guiones medios para separar palabras.\n  \u200b\n\n\n\n\n\n\nSe deben usar exclusivamente letras min\u00fasculas para las URLs, exceptuando los par\u00e1metros camelCase en las query strings.\n\n\nMal:\n \nGET /Datasets/5f86r\n\n\nBien:\n \nGET /datasets/5f86r\n\n\n\n\n\n\nNo se deben incluir extensiones de archivo en los endpoints. El tipo de contenido a devolver al cliente estar\u00e1 determinado por el header \nAccepts\n de la request.\n\n\nMal:\n \nGET /datasets/5f86r.json\n\n\n\n\n\n\n2. Verbos HTTP\n\n\n\n\nGET\n\n\nPOST\n\n\nPATCH\n: para las actualizaciones parciales.\n\n\nDELETE\n\n\nOPTIONS:\n para la navegaci\u00f3n hypermedia.\n\n\nHEAD:\n para otorgar una forma liviana de chequear el estado de un recurso.\n\n\n\n\nMapeo CRUD\n\n\n\n\nCreate \u2014\n POST\n\n\nRead \u2014\n GET\n\n\nUpdate \u2014\n PATCH\n\n\nDelete \u2014\n DELETE\n\n\n\n\n3. Queries\n\n\n\n\n\n\nB\u00fasqueda:\n se har\u00e1 por medio del par\u00e1metro \nsearch\n, con los t\u00e9rminos de b\u00fasqueda separados por \n+\n. Se admitir\u00e1n dos clases de b\u00fasqueda:\n\n\nGlobal:\n  \nGET /search?query=calidad+aire\n \n\n\nBusca en todos los recursos.\n\n\nParticular:\n  \nGET /datasets/search?query=calidad+aire\n \n\n\nBusca en los datasets.\n\n\n\n\n\n\nFitrado:\n a trav\u00e9s de par\u00e1metros.\n\n\nEjemplo\n: \nGET /datasets?state=public\n\n\nDevuelve los datasets p\u00fablicos.\n\n\n\n\n\n\nOrdenado:\n a trav\u00e9s de\u00a0los par\u00e1metros \norderBy\n y \nsort\n. Este \u00faltimo admite ASC o DESC como valores, para ordenar en forma ascendiente o descendiente respectivamente. \n\n\nEjemplo\n: \nGET /datasets?orderBy=name\nsort=DESC\n\n\nDevuelve los datasets ordenados por nombre en forma descendiente.\n\n\n\n\n\n\nLimitado:\n a trav\u00e9s del par\u00e1metro \nlimit\n.\n\n\nEjemplo\n: \nGET /datasets?limit=10\n\n\nDevuelve 10 resultados.\n\n\n\n\n\n\nPaginado:\n por rango, a trav\u00e9s del par\u00e1metro \noffset\n combinado con el par\u00e1metro \nlimit\n. El \noffset\n es el ID del elemento a partir del cual se comienza a contar la cantidad de \u00edtems especificada por limit. Si no se pasara \nlimit\n, se obtendr\u00edan todos los recursos a partir del \noffset\n. \n\n\nDe all\u00ed la necesidad de \ndefinir un l\u00edmite\n para la cantidad de registros que una query puede devolver, especialmente cuando se trata de muchos registros, como un dataset extenso. Igualmente para el caso de en que se piden todos los registros de un recurso, como por ejemplo \nGET /datasets\n.\n\n\nEl paginado debe ser consistente, es decir usar el timestamp de la request como una suerte de versionado a los fines de no incluir duplicados (incluso aunque los objetos involucrados cambien).\n\n\nEjemplo\n: \nGET /datasets?offset=5f86r\nlimit=30\n\n\nDevuelve los 10 resultados que siguen al \u00edtem n\u00famero 20.\n\n\n\n\n\n\nRespuestas parciales:\n permite a los clientes elegir qu\u00e9 informaci\u00f3n necesitan en lugar de obtener la respuesta completa, lo que es especialmente \u00fatil para las aplicaciones m\u00f3viles (por el ancho de banda limitado). Los datos requeridos van en el campo \nfields\n, separados por coma.\n\n\nEjemplo\n: \nGET /datasets?fields=name,description\n\n\n\n\n\n\nPalabras reservadas:\n \nfirst\n, \nlast\n y \ncount\n. Pueden reservarse otras, seg\u00fan el tipo de dato (por ejemplo: \naverage\n, \nmax\n, \nmin\n).\n\n\nFirst:\n  \nGET /datasets/first\n\n\nDevuelve el primer dataset. \n\n\nLast:\n  \nGET /datasets/last\n\n\nDevuelve el \u00faltimo dataset. \n\n\nCount:\n  \nGET /datasets/count\n\n\nDevuelve la cantidad de datasets. \n\n\n\n\n\n\nRecursos relacionados:\n posibilita incluir en la response otros recursos que est\u00e9n relacionados con el recurso que fue requerido. Debe ser posible incluir m\u00e1s de uno separ\u00e1ndolos con comas, y tambi\u00e9n acceder a un atributo en particular (despu\u00e9s de un punto).\n\n\nEjemplo\n: \nGET /datasets?include=tags\n\n\nEjemplo\n: \nGET /datasets?include=tags.name\n\n\nEjemplo\n: \nGET /datasets?include=tags.name,tags.id\n\n\n\n\n\n\n4. Plugins\n\n\nTBD\n\n\n5. Seguridad\n\n\nAutenticaci\u00f3n\n\n\nLa API de ODIN ser\u00e1 una API privada, es decir que no ser\u00e1 posible usarla sin estar autenticado.\n\n\nSe delegar\u00e1 la autenticaci\u00f3n en \nKong\n, que admite varios tipos de autenticaci\u00f3n por medio de plugins. La instalaci\u00f3n por defecto de ODIN utilizar\u00e1 OAuth2 para la autenticaci\u00f3n, que a su vez requiere el uso de SSL.\n\n\nListas de control de acceso\n\n\nDelegado en \nKong\n.\n\n\nControl de tr\u00e1fico\n\n\nDelegado en \nKong\n.\n\n\nCORS\n\n\nTambi\u00e9n delegado en Kong. El soporte de la cabecera CORS debe estar habilitado por defecto para todos los clientes.\n\n\n5. I18N y L10N\n\n\nEl soporte de internacionalizaci\u00f3n y localizaci\u00f3n se har\u00e1 a nivel de frontend. El lenguaje por defecto en ODIN ser\u00e1 el ingl\u00e9s, tanto para los identificadores en el c\u00f3digo fuente como para los comentarios.\n\n\n6. Testeo\n\n\nTBD", 
            "title": "Key Features"
        }, 
        {
            "location": "/key-features/#1-urls", 
            "text": "La API de ODIN es una API Hypermedia. Las URLs no deben ser construidas por el cliente, sino que \u00e9ste debe seguir las URLs provistas por la propia API.    Estructura jer\u00e1rquica:  de lo universal a lo particular. Se usa la barra  /  para indicar una relaci\u00f3n jer\u00e1rquica entre recursos.  Ejemplo:   GET /datasets/5f86r    Granularidad media:  los recursos no deben estar anidados a m\u00e1s de dos niveles de profundidad.  Mal :  GET /datasets/5f86r/resources/f9e3b  Bien :  GET /datasets/5f86r/resources    Uso de sustantivos:  para designar recursos. S\u00f3lo se deben emplear verbos para los endpoints de servicio.  Mal :  GET /getAllDatasets  Bien :  GET /datasets       Uso de plurales:  s\u00f3lo usar la forma singular de los sustantivos cuando no haya posibilidad alguna de que los recursos tengan m\u00faltiples.  Mal :  GET /dataset  Bien :  GET /datasets       camelCase:  lowerCamelCase para los par\u00e1metros, tanto en la url como en el body de la request.  Ejemplo :  GET /datasets?filterBy=name", 
            "title": "1. URLs"
        }, 
        {
            "location": "/key-features/#otras-consideraciones", 
            "text": "No se debe incluir una barra  /  al final de las URLs. La API no debe admitir URLs que las incluyan, ni incluirlas en los links hypermedia que genere.  Mal:   GET /datasets/5f86r/  Bien:   GET /datasets/5f86r    No se deben usar guiones bajos en las URLs. En el extremo caso de que no fuera posible o conveniente usar camelCase, usar guiones medios para separar palabras.\n  \u200b    Se deben usar exclusivamente letras min\u00fasculas para las URLs, exceptuando los par\u00e1metros camelCase en las query strings.  Mal:   GET /Datasets/5f86r  Bien:   GET /datasets/5f86r    No se deben incluir extensiones de archivo en los endpoints. El tipo de contenido a devolver al cliente estar\u00e1 determinado por el header  Accepts  de la request.  Mal:   GET /datasets/5f86r.json", 
            "title": "Otras consideraciones"
        }, 
        {
            "location": "/key-features/#2-verbos-http", 
            "text": "GET  POST  PATCH : para las actualizaciones parciales.  DELETE  OPTIONS:  para la navegaci\u00f3n hypermedia.  HEAD:  para otorgar una forma liviana de chequear el estado de un recurso.", 
            "title": "2. Verbos HTTP"
        }, 
        {
            "location": "/key-features/#mapeo-crud", 
            "text": "Create \u2014  POST  Read \u2014  GET  Update \u2014  PATCH  Delete \u2014  DELETE", 
            "title": "Mapeo CRUD"
        }, 
        {
            "location": "/key-features/#3-queries", 
            "text": "B\u00fasqueda:  se har\u00e1 por medio del par\u00e1metro  search , con los t\u00e9rminos de b\u00fasqueda separados por  + . Se admitir\u00e1n dos clases de b\u00fasqueda:  Global:    GET /search?query=calidad+aire    Busca en todos los recursos.  Particular:    GET /datasets/search?query=calidad+aire    Busca en los datasets.    Fitrado:  a trav\u00e9s de par\u00e1metros.  Ejemplo :  GET /datasets?state=public  Devuelve los datasets p\u00fablicos.    Ordenado:  a trav\u00e9s de\u00a0los par\u00e1metros  orderBy  y  sort . Este \u00faltimo admite ASC o DESC como valores, para ordenar en forma ascendiente o descendiente respectivamente.   Ejemplo :  GET /datasets?orderBy=name sort=DESC  Devuelve los datasets ordenados por nombre en forma descendiente.    Limitado:  a trav\u00e9s del par\u00e1metro  limit .  Ejemplo :  GET /datasets?limit=10  Devuelve 10 resultados.    Paginado:  por rango, a trav\u00e9s del par\u00e1metro  offset  combinado con el par\u00e1metro  limit . El  offset  es el ID del elemento a partir del cual se comienza a contar la cantidad de \u00edtems especificada por limit. Si no se pasara  limit , se obtendr\u00edan todos los recursos a partir del  offset .   De all\u00ed la necesidad de  definir un l\u00edmite  para la cantidad de registros que una query puede devolver, especialmente cuando se trata de muchos registros, como un dataset extenso. Igualmente para el caso de en que se piden todos los registros de un recurso, como por ejemplo  GET /datasets .  El paginado debe ser consistente, es decir usar el timestamp de la request como una suerte de versionado a los fines de no incluir duplicados (incluso aunque los objetos involucrados cambien).  Ejemplo :  GET /datasets?offset=5f86r limit=30  Devuelve los 10 resultados que siguen al \u00edtem n\u00famero 20.    Respuestas parciales:  permite a los clientes elegir qu\u00e9 informaci\u00f3n necesitan en lugar de obtener la respuesta completa, lo que es especialmente \u00fatil para las aplicaciones m\u00f3viles (por el ancho de banda limitado). Los datos requeridos van en el campo  fields , separados por coma.  Ejemplo :  GET /datasets?fields=name,description    Palabras reservadas:   first ,  last  y  count . Pueden reservarse otras, seg\u00fan el tipo de dato (por ejemplo:  average ,  max ,  min ).  First:    GET /datasets/first  Devuelve el primer dataset.   Last:    GET /datasets/last  Devuelve el \u00faltimo dataset.   Count:    GET /datasets/count  Devuelve la cantidad de datasets.     Recursos relacionados:  posibilita incluir en la response otros recursos que est\u00e9n relacionados con el recurso que fue requerido. Debe ser posible incluir m\u00e1s de uno separ\u00e1ndolos con comas, y tambi\u00e9n acceder a un atributo en particular (despu\u00e9s de un punto).  Ejemplo :  GET /datasets?include=tags  Ejemplo :  GET /datasets?include=tags.name  Ejemplo :  GET /datasets?include=tags.name,tags.id", 
            "title": "3. Queries"
        }, 
        {
            "location": "/key-features/#4-plugins", 
            "text": "TBD", 
            "title": "4. Plugins"
        }, 
        {
            "location": "/key-features/#5-seguridad", 
            "text": "", 
            "title": "5. Seguridad"
        }, 
        {
            "location": "/key-features/#autenticacion", 
            "text": "La API de ODIN ser\u00e1 una API privada, es decir que no ser\u00e1 posible usarla sin estar autenticado.  Se delegar\u00e1 la autenticaci\u00f3n en  Kong , que admite varios tipos de autenticaci\u00f3n por medio de plugins. La instalaci\u00f3n por defecto de ODIN utilizar\u00e1 OAuth2 para la autenticaci\u00f3n, que a su vez requiere el uso de SSL.", 
            "title": "Autenticaci\u00f3n"
        }, 
        {
            "location": "/key-features/#listas-de-control-de-acceso", 
            "text": "Delegado en  Kong .", 
            "title": "Listas de control de acceso"
        }, 
        {
            "location": "/key-features/#control-de-trafico", 
            "text": "Delegado en  Kong .", 
            "title": "Control de tr\u00e1fico"
        }, 
        {
            "location": "/key-features/#cors", 
            "text": "Tambi\u00e9n delegado en Kong. El soporte de la cabecera CORS debe estar habilitado por defecto para todos los clientes.", 
            "title": "CORS"
        }, 
        {
            "location": "/key-features/#5-i18n-y-l10n", 
            "text": "El soporte de internacionalizaci\u00f3n y localizaci\u00f3n se har\u00e1 a nivel de frontend. El lenguaje por defecto en ODIN ser\u00e1 el ingl\u00e9s, tanto para los identificadores en el c\u00f3digo fuente como para los comentarios.", 
            "title": "5. I18N y L10N"
        }, 
        {
            "location": "/key-features/#6-testeo", 
            "text": "TBD", 
            "title": "6. Testeo"
        }, 
        {
            "location": "/arquitectura/", 
            "text": "Arquitectura\n\n\n\n\n\n\nEn la \nbase de datos No SQL\n se deben almacenar los datasets propiamente dichos, que son datos no relacionales.\n\n\nEn la \nbase de datos SQL\n se deben almacenar los datos relacionales del sistema, como ser: usuarios, permisos, roles, organizaciones, metadatos, etc.\n\n\nEl \nalmacenamiento de est\u00e1ticos\n es para almacenar los recursos asociados a los datasets: archivos csv, pdf, shp, etc.\n\n\nEl \nAPI Gateway\n es una aplicaci\u00f3n third party que oficia de proxy entre los clientes y la API, a\u00f1adiendo una capa de administraci\u00f3n extensible con plugins.\n\n\nEl \nAdmin\n es una aplicaci\u00f3n web (cliente de la API) desde la cual es posible administrar las diferentes entidades que componen ODIN.\n\n\n\n\nStack\n\n\nAPI\n\n\n\n\nSistema operativo:\n Ubuntu 16.04 Xenial Xerus\n\n\nServidor:\n NodeJS 5.11.1\n\n\nLenguaje:\n JavaScript 5\n\n\nFramework:\n Sails 0.12\n\n\nBBDD no relacional:\n DocumentDB con interfaz de MongoDB (Azure Managed)\n\n\nBDD relacional:\n SQLServer (Azure Managed)\n\n\nAlmacenamiento de archivos:\n Azure DataStorage\n\n\n\n\nAPI Gateway\n\n\n\n\nSistema operativo:\n Ubuntu 16.04 Xenial Xerus\n\n\nAplicaci\u00f3n:\n Kong 0.8.2\n\n\nServidor:\n NGINX 1.10.0\n\n\n\n\nFrontends\n\n\n\n\nAdmin:\n aplicaci\u00f3n AngularJS 1.5.\n\n\ndata.buenosaires.gob.ar:\n aplicaci\u00f3n AngularJS 1.5.", 
            "title": "Arquitectura"
        }, 
        {
            "location": "/arquitectura/#arquitectura", 
            "text": "En la  base de datos No SQL  se deben almacenar los datasets propiamente dichos, que son datos no relacionales.  En la  base de datos SQL  se deben almacenar los datos relacionales del sistema, como ser: usuarios, permisos, roles, organizaciones, metadatos, etc.  El  almacenamiento de est\u00e1ticos  es para almacenar los recursos asociados a los datasets: archivos csv, pdf, shp, etc.  El  API Gateway  es una aplicaci\u00f3n third party que oficia de proxy entre los clientes y la API, a\u00f1adiendo una capa de administraci\u00f3n extensible con plugins.  El  Admin  es una aplicaci\u00f3n web (cliente de la API) desde la cual es posible administrar las diferentes entidades que componen ODIN.", 
            "title": "Arquitectura"
        }, 
        {
            "location": "/arquitectura/#stack", 
            "text": "", 
            "title": "Stack"
        }, 
        {
            "location": "/arquitectura/#api", 
            "text": "Sistema operativo:  Ubuntu 16.04 Xenial Xerus  Servidor:  NodeJS 5.11.1  Lenguaje:  JavaScript 5  Framework:  Sails 0.12  BBDD no relacional:  DocumentDB con interfaz de MongoDB (Azure Managed)  BDD relacional:  SQLServer (Azure Managed)  Almacenamiento de archivos:  Azure DataStorage", 
            "title": "API"
        }, 
        {
            "location": "/arquitectura/#api-gateway", 
            "text": "Sistema operativo:  Ubuntu 16.04 Xenial Xerus  Aplicaci\u00f3n:  Kong 0.8.2  Servidor:  NGINX 1.10.0", 
            "title": "API Gateway"
        }, 
        {
            "location": "/arquitectura/#frontends", 
            "text": "Admin:  aplicaci\u00f3n AngularJS 1.5.  data.buenosaires.gob.ar:  aplicaci\u00f3n AngularJS 1.5.", 
            "title": "Frontends"
        }, 
        {
            "location": "/codigo-fuente/", 
            "text": "Repositorio\n\n\nEl c\u00f3digo deber\u00e1 alojarse en un repositorio GitHub perteneciente a la organizaci\u00f3n \ngcba-odin\n.\n\n\nBranches\n\n\n\n\n\n\nmaster:\n la rama de producci\u00f3n.\n\n\n\n\n\n\nstaging:\n la rama de pre-producci\u00f3n, donde se pueden revisar y aprobar/rechazar cambios antes de que vayan a producci\u00f3n.\n\n\n\n\n\n\nqa:\n para testeo e integraci\u00f3n continua (ej. con Travis CI).\n\n\n\n\n\n\ndev\n: la rama de desarrollo.\n\n\n\n\n\n\nCommits\n\n\nLos commits deben encapsular cambios relacionados, prefiri\u00e9ndose una multiplicidad de commits at\u00f3micos y claramente diferenciados a unos pocos que sean acumulativos.\n\n\nLos mensajes de los commits deben hacerse en ingl\u00e9s y ser descriptivos de su contenido, breves y concisos.", 
            "title": "Codigo Fuente"
        }, 
        {
            "location": "/codigo-fuente/#repositorio", 
            "text": "El c\u00f3digo deber\u00e1 alojarse en un repositorio GitHub perteneciente a la organizaci\u00f3n  gcba-odin .", 
            "title": "Repositorio"
        }, 
        {
            "location": "/codigo-fuente/#branches", 
            "text": "master:  la rama de producci\u00f3n.    staging:  la rama de pre-producci\u00f3n, donde se pueden revisar y aprobar/rechazar cambios antes de que vayan a producci\u00f3n.    qa:  para testeo e integraci\u00f3n continua (ej. con Travis CI).    dev : la rama de desarrollo.", 
            "title": "Branches"
        }, 
        {
            "location": "/codigo-fuente/#commits", 
            "text": "Los commits deben encapsular cambios relacionados, prefiri\u00e9ndose una multiplicidad de commits at\u00f3micos y claramente diferenciados a unos pocos que sean acumulativos.  Los mensajes de los commits deben hacerse en ingl\u00e9s y ser descriptivos de su contenido, breves y concisos.", 
            "title": "Commits"
        }, 
        {
            "location": "/metodologia/", 
            "text": "La metodolog\u00eda de desarrollo a emplear toma elementos de SCRUM, Incremental Build Model y Spec-Driven Development.\n\n\nSCRUM\n\n\nEl proceso de desarrollo estar\u00e1 dividido en sprints de una semana (5 d\u00edas h\u00e1biles).\n\n\nIncremental Build Model\n\n\nSe desarrollar\u00e1 la API m\u00f3dulo por m\u00f3dulo, cada uno de los cuales puede tomar uno o m\u00e1s sprints. \n\n\nIdealmente cada sprint abarcar\u00e1 el desarrollo de una pieza de funcionalidad peque\u00f1a, pero completa y autocontenida, de acuerdo a la lista de features definida para el release correspondiente.\n\n\nEl desarrollo debe ser full-stack, es decir que se desarollar\u00e1n el frontend y el admin en forma paralela al desarrollo de la API.\n\n\nSpec-Driven Development\n\n\nImplica empezar con la descripci\u00f3n y prototipado de la API siguiendo una especificaci\u00f3n (spec) para luego proseguir con su implementaci\u00f3n. El spec no s\u00f3lo sirve como una suerte de contrato para el desarrollo de la API, sino que tambi\u00e9n puede ser usado para generar documentaci\u00f3n, tests, SDKs, entre otras utilidades.\n\n\nBajo esta metodolog\u00eda se dividir\u00e1 el proceso de desarrollo en tres etapas:\n\n\n\n\n\n\nSpec:\n en esta etapa se escribir\u00e1 el spec de la pieza de funcionalidad a desarrollar durante el sprint. El nivel de profundidad/completitud depender\u00e1 de las features definidas para el release correspondiente.\n\n\nEl formato de spec a utlizar ser\u00e1 \nAPI Blueprint\n. Si bien anteriormente se hab\u00eda utilizado \nSwagger\n (porque el framework iba a ser Loopback, y Loopback pod\u00eda importar Swagger), para poder usar la herramienta de testeo autom\u00e1tica \nDredd\n (adem\u00e1s de toda la suite \u0010\nApiary\n) es preciso usar este formato.\n\n\nA medida que se va describiendo la pieza de funcionalidad, se puede testear el dise\u00f1o de la API haciendo uso de un servicio de mocking (como el de Apiary), corrigiendo los errores a medida que vayan surgiendo.\n\n\nPara escribir el spec se puede utilizar el editor de Apiary, o el que cada desarrollador prefiera.\n\n\nDuraci\u00f3n:\n 1 d\u00eda.\n\n\n\n\n\n\nDesarrollo:\n se implementar\u00e1 lo descripto en el spec en su totalidad, tal cual se encuentra especificado. \n\n\nDuraci\u00f3n:\n 3 d\u00edas.\n\n\n\n\n\n\nTesteo:\n se correr\u00e1 la herramienta de testeo \nDredd\n contra la implementaci\u00f3n (en relaci\u00f3n al spec) y se corregir\u00e1n los errores que surjan. \n\n\nDuraci\u00f3n:\n 1 d\u00eda.", 
            "title": "Metodolog\u00eda"
        }, 
        {
            "location": "/metodologia/#scrum", 
            "text": "El proceso de desarrollo estar\u00e1 dividido en sprints de una semana (5 d\u00edas h\u00e1biles).", 
            "title": "SCRUM"
        }, 
        {
            "location": "/metodologia/#incremental-build-model", 
            "text": "Se desarrollar\u00e1 la API m\u00f3dulo por m\u00f3dulo, cada uno de los cuales puede tomar uno o m\u00e1s sprints.   Idealmente cada sprint abarcar\u00e1 el desarrollo de una pieza de funcionalidad peque\u00f1a, pero completa y autocontenida, de acuerdo a la lista de features definida para el release correspondiente.  El desarrollo debe ser full-stack, es decir que se desarollar\u00e1n el frontend y el admin en forma paralela al desarrollo de la API.", 
            "title": "Incremental Build Model"
        }, 
        {
            "location": "/metodologia/#spec-driven-development", 
            "text": "Implica empezar con la descripci\u00f3n y prototipado de la API siguiendo una especificaci\u00f3n (spec) para luego proseguir con su implementaci\u00f3n. El spec no s\u00f3lo sirve como una suerte de contrato para el desarrollo de la API, sino que tambi\u00e9n puede ser usado para generar documentaci\u00f3n, tests, SDKs, entre otras utilidades.  Bajo esta metodolog\u00eda se dividir\u00e1 el proceso de desarrollo en tres etapas:    Spec:  en esta etapa se escribir\u00e1 el spec de la pieza de funcionalidad a desarrollar durante el sprint. El nivel de profundidad/completitud depender\u00e1 de las features definidas para el release correspondiente.  El formato de spec a utlizar ser\u00e1  API Blueprint . Si bien anteriormente se hab\u00eda utilizado  Swagger  (porque el framework iba a ser Loopback, y Loopback pod\u00eda importar Swagger), para poder usar la herramienta de testeo autom\u00e1tica  Dredd  (adem\u00e1s de toda la suite \u0010 Apiary ) es preciso usar este formato.  A medida que se va describiendo la pieza de funcionalidad, se puede testear el dise\u00f1o de la API haciendo uso de un servicio de mocking (como el de Apiary), corrigiendo los errores a medida que vayan surgiendo.  Para escribir el spec se puede utilizar el editor de Apiary, o el que cada desarrollador prefiera.  Duraci\u00f3n:  1 d\u00eda.    Desarrollo:  se implementar\u00e1 lo descripto en el spec en su totalidad, tal cual se encuentra especificado.   Duraci\u00f3n:  3 d\u00edas.    Testeo:  se correr\u00e1 la herramienta de testeo  Dredd  contra la implementaci\u00f3n (en relaci\u00f3n al spec) y se corregir\u00e1n los errores que surjan.   Duraci\u00f3n:  1 d\u00eda.", 
            "title": "Spec-Driven Development"
        }, 
        {
            "location": "/sprints/sprint-1/", 
            "text": "Duraci\u00f3n:\n Mi\u00e9rcoles 18/05/16 - Martes 24/05/16\n\n\nAlcance\n\n\n\n\nObjetivo\n\n\nHacer el login y CRUD de los usuarios, crear la mayor\u00eda de las tablas de la base de datos y dejar prototipada buena parte de la interfaz del admin y una porci\u00f3n del frontend.\n\n\nNo Entra\n\n\nFiles\n\n\n\n\nEtiquetas\n\n\nUsuario responsable\n\n\nFrecuencia de actualizaci\u00f3n\n\n\nParseo y guardado de datos en la base de datos no relacional (CSVs)\n\n\n\n\nDatasets\n\n\n\n\nEtiquetas\n\n\nUsuario responsable\n\n\n\n\nRepositorios\n\n\n\n\nAPI:\n \nhttps://github.com/gcba-odin/odin\n\n\nAdmin:\n \nhttps://github.com/gcba-odin/odin-admin\n\n\nFrontend:\n \nhttps://github.com/gcba-odin/odin-frontend\n\n\n\n\nTareas\n\n\nAPI\n\n\n\n\nEscribir spec (en Api Blueprint) con los contenidos de este sprint\n\n\nCrear seed para la base de datos, con 3 - 5 elementos de cada entidad\n\n\n\n\nDesarrollar endpoints.\n\n\nNota 1:\n en ning\u00fan caso los campos id, createdAt y updatedAt deben ser editables a trav\u00e9s de la API. Son campos que se crean y actualizan (updatedAt) autom\u00e1ticamente, y en todo otro caso deben ser de s\u00f3lo lectura.\n\n\nNota 2:\n la API s\u00f3lo debe aceptar requests con body en JSON. Por lo tanto las requests con body deben contener la cabecera \nContent-Type\n con el valor \napplication/json\n. Caso contrario, la API debe devolver un error.\n\n\n\n\n\n\nCorrer tests de Dredd\n\n\n\n\nDesarrollar subida de archivos\n\n\nDesarrollar parseo y guardado de datos en la base de datos no relacional\n\n\nInstalar y configurar sails-permissions\n\n\n\n\nInput Yeoman\n\n\nApplication questions:\n? Application name odin\n\nConfiguration questions:\n? Database name odin\n? Enable CORS? Yes\n\nLogger questions:\n? Choose which logger you want to configure Winston\n\nBlueprint questions:\n? Use overridden blueprints? Yes\n\nController questions:\n? Choose which predefined controllers you want to copy (Press \nspace\n to select)PingController, SearchController\n\nHook questions:\n? Choose which predefined hooks you want to copy (Press \nspace\n to select)CountHook, PluralizeHook\n\nCron questions:\n? Do you need cron? Yes\n\nSwagger questions:\n? Do you need Swagger UI Explorer? No\n\nAuthentication questions:\n? Do you need authentication layer? Yes\n\nService questions:\n? Select which services you want to use CipherService, HashService, MailerService, StorageService\n? Mailer provider direct\n? Storage provider Local\n\n\n\n\nGuardar la secret key generada en Google Drive.\n\n\nAdmin\n\n\n\n\nLogin (funcional)\n\n\nCRUD de users (funcional)\n\n\nCRUD de organizations (s\u00f3lo UI)\n\n\nCRUD de statuses (s\u00f3lo UI)\n\n\nCRUD de filetypes (s\u00f3lo UI)\n\n\nCRUD de files (s\u00f3lo UI)\n\n\nCRUD de databases (s\u00f3lo UI)\n\n\nCRUD de datasets (s\u00f3lo UI)\n\n\n\n\nFrontend\n\n\n\n\nLanding page (home, s\u00f3lo UI)\n\n\nListado datasets (s\u00f3lo UI)\n\n\nVer dataset (s\u00f3lo UI)\n\n\n\n\nPrioridades\n\n\n\n\nLogin\n\n\nCRUD de usuarios\n\n\n\n\nEndpoints\n\n\nUsers\n\n\nGET     /users\nPOST    /users\nHEAD    /users\nOPTIONS  /users\n\nGET     /users/first\nHEAD    /users/first\nOPTIONS  /users/first\n\nGET     /users/last\nHEAD    /users/last\nOPTIONS  /users/last\n\nGET     /users/count\nHEAD    /users/count\nOPTIONS  /users/count\n\nGET     /users/:id\nPATCH   /users/:id\nDELETE  /users/:id\nHEAD    /users/:id\nOPTIONS  /users/:id\n\nGET     /users/login\nPOST    /users/login\nHEAD    /users/login\nOPTIONS  /users/login\n\n\n\n\nOrganizations\n\n\nGET     /organizations\nPOST    /organizations\nHEAD    /organizations\nOPTIONS  /organizations\n\nGET     /organizations/first\nHEAD    /organizations/first\nOPTIONS  /organizations/first\n\nGET     /organizations/last\nHEAD    /organizations/last\nOPTIONS  /organizations/last\n\nGET     /organizations/count\nHEAD    /organizations/count\nOPTIONS  /organizations/count\n\nGET     /organizations/:id\nPATCH   /organizations/:id\nDELETE  /organizations/:id\nHEAD    /organizations/:id\nOPTIONS  /organizations/:id\n\n\n\n\nCategories\n\n\nGET     /categories\nPOST    /categories\nHEAD    /categories\nOPTIONS  /categories\n\nGET     /categories/first\nHEAD    /categories/first\nOPTIONS  /categories/first\n\nGET     /categories/last\nHEAD    /categories/last\nOPTIONS  /categories/last\n\nGET     /categories/count\nHEAD    /categories/count\nOPTIONS  /categories/count\n\nGET     /categories/:id\nPATCH   /categories/:id\nDELETE  /categories/:id\nHEAD    /categories/:id\nOPTIONS  /categories/:id\n\n\n\n\nStatuses\n\n\nGET     /statuses\nPOST    /statuses\nHEAD    /statuses\nOPTIONS  /statuses\n\nGET     /statuses/first\nHEAD    /statuses/first\nOPTIONS  /statuses/first\n\nGET     /statuses/last\nHEAD    /statuses/last\nOPTIONS  /statuses/last\n\nGET     /statuses/count\nHEAD    /statuses/count\nOPTIONS  /statuses/count\n\nGET     /statuses/:id\nPATCH   /statuses/:id\nDELETE  /statuses/:id\nHEAD    /statuses/:id\nOPTIONS  /statuses/:id\n\n\n\n\nFiletypes\n\n\nGET     /filetypes\nPOST    /filetypes\nHEAD    /filetypes\nOPTIONS  /filetypes\n\nGET     /filetypes/first\nHEAD    /filetypes/first\nOPTIONS  /filetypes/first\n\nGET     /filetypes/last\nHEAD    /filetypes/last\nOPTIONS  /filetypes/last\n\nGET     /filetypes/count\nHEAD    /filetypes/count\nOPTIONS  /filetypes/count\n\nGET     /filetypes/:id\nPATCH   /filetypes/:id\nDELETE  /filetypes/:id\nHEAD    /filetypes/:id\nOPTIONS  /filetypes/:id\n\n\n\n\nFiles\n\n\nGET     /files\nPOST    /files\nHEAD    /files\nOPTIONS  /files\n\nGET     /files/first\nHEAD    /files/first\nOPTIONS  /files/first\n\nGET     /files/last\nHEAD    /files/last\nOPTIONS  /files/last\n\nGET     /files/count\nHEAD    /files/count\nOPTIONS  /files/count\n\nGET     /files/:id\nPATCH   /files/:id\nDELETE  /files/:id\nHEAD    /files/:id\nOPTIONS  /files/:id\n\n\n\n\nDatabases\n\n\nGET     /databases\nPOST    /databases\nHEAD    /databases\nOPTIONS  /databases\n\nGET     /databases/first\nHEAD    /databases/first\nOPTIONS  /databases/first\n\nGET     /databases/last\nHEAD    /databases/last\nOPTIONS  /databases/last\n\nGET     /databases/count\nHEAD    /databases/count\nOPTIONS  /databases/count\n\nGET     /databases/:id\nPATCH   /databases/:id\nDELETE  /databases/:id\nHEAD    /databases/:id\nOPTIONS  /databases/:id\n\n\n\n\nDatasets\n\n\nGET     /datasets\nPOST    /datasets\nHEAD    /datasets\nOPTIONS  /datasets\n\nGET     /datasets/first\nHEAD    /datasets/first\nOPTIONS  /datasets/first\n\nGET     /datasets/last\nHEAD    /datasets/last\nOPTIONS  /datasets/last\n\nGET     /datasets/count\nHEAD    /datasets/count\nOPTIONS  /datasets/count\n\nGET     /datasets/:id\nPATCH   /datasets/:id\nDELETE  /datasets/:id\nHEAD    /datasets/:id\nOPTIONS  /datasets/:id\n\n\n\n\nEstructura de las responses\n\n\nGET\n\n\nSi no hay errores. En el caso de que se devuelva un solo registro, en data no va un array, sino ese registro s\u00f3lo. Y si no hay registros, en data habr\u00e1 un objeto vac\u00edo.\n\n\n{\n   \nmeta\n: {\n       \nstatusCode\n: ...,\n       \nstatusMessage\n: ..,\n   },\n   \ndata\n: [\n     {\n         ...\n     }, \n     {\n         ...\n     }, \n     {\n         ...\n     }  \n   ],\n   \nlinks\n: {\n       ...\n   }\n}\n\n\n\n\nSi hay error/es:\n\n\n{\n   \nmeta\n: {\n       \nstatusCode\n: ...,\n       \nstatusMessage\n: ..\n   },\n   \nerror\n: \n     {\n         ...\n     }, \n   \nlinks\n: {\n       ...\n   }\n}\n\n\n\n\nPOST\n\n\n{\n   \nmeta\n: {\n       \nstatusCode\n: ...,\n       \nstatusMessage\n: ..,\n   },\n   \nlinks\n: {\n       ...\n   }\n}\n\n\n\n\nPATCH\n\n\nSi hubo error/es incluir objeto \"error\" como en GET.\n\n\n{\n    \nmeta\n: {\n       \nstatusCode\n: ...,\n       \nstatusMessage\n: ..,\n   },\n   \nlinks\n: {\n       ...\n   }\n}\n\n\n\n\nDELETE\n\n\nSi hubo error/es incluir objeto \"error\" como en GET.\n\n\n{\n    \nmeta\n: {\n       \nstatusCode\n: ...,\n       \nstatusMessage\n: ..,\n   },\n   \nlinks\n: {\n       ...\n   }\n}\n\n\n\n\nHEAD\n\n\nUna response a una request HEAD no incluye un body.\n\n\n\n\nOPTIONS\n\n\nSi hubo error/es incluir objeto \"error\" como en GET.\n\n\n{\n    \nmeta\n: {\n       \nstatusCode\n: ...,\n       \nstatusMessage\n: ..,\n   },\n   \nmethods\n: {\n       {\n           \nurl\n: ...,\n           \nheaders\n: {\n               ...\n           },\n           \nparameters\n: {\n               ...\n           }\n       },\n   },\n   \nlinks\n: {\n       ...\n   }\n}\n\n\n\n\nBase de datos\n\n\nUsers\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nusername\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 25 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\npassword\n\n\nTipo:\n string\n\n\nRequerido:\n s\u00ed \n\n\n\n\n\n\n\n\n\n\n\n\nemail\n\n\nTipo:\n email\n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 250 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nfirstName\n\n\nTipo:\n string\n\n\nMax:\n 50 car\u00e1cteres\n\n\nDefault:\n '' (empty string)\n\n\n\n\n\n\n\n\n\n\n\n\nlastName\n\n\nTipo:\n string\n\n\nMax:\n 100 car\u00e1cteres\n\n\nDefault:\n '' (empty string)\n\n\n\n\n\n\n\n\n\n\n\n\navatar\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nactive\n\n\nTipo:\n boolean\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\nClaves For\u00e1neas\n\n\n\n\n\n\norganization\n\n\nEl ID de la organizaci\u00f3n a que pertenece. En el caso del Admin (usuario 1) por el momento ser\u00e1 la primera organizaci\u00f3n generada por el seedeo de la base de datos (ej. \"Organizaci\u00f3n 1\").\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedBy\n\n\nEl ID del admin que cre\u00f3 el usuario. En el caso del Admin (usuario 1), es s\u00ed mismo (1).\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres \n\n\n\n\n\n\nCalculados\n\n\n\n\n\n\nfullName\n\n\nEs el resultado de concatenar firstName y lastName, separados por un espacio en blanco.\n\n\nTipo:\n string\n\n\nEjemplo:\n Juan P\u00e9rez\n\n\n\n\n\n\nOrganizations\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nname\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nTipo:\n string\n\n\nMax:\n 350 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\naddress\n\n\nTipo:\n string\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nactive\n\n\nTipo:\n boolean\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\nClaves For\u00e1neas\n\n\n\n\n\n\nparent\n\n\nEl ID de la organizaci\u00f3n a que pertenece. En caso de una organizaci\u00f3n que no depende de alguna otra existente en la base de datos, va NULL.\n\n\nTipo:\n string \n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedBy\n\n\nEl ID del usuario que cre\u00f3 la organizaci\u00f3n.\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres \n\n\n\n\n\n\nCategories\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nname\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nTipo:\n string\n\n\nMax:\n 350 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\nClaves For\u00e1neas\n\n\n\n\n\n\ncreatedBy\n\n\nEl ID del usuario que cre\u00f3 la categor\u00eda.\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres \n\n\n\n\n\n\nStatuses\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nname\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\nNota:\n a los fines del seedeo, los estados por recurso son:\n\n\n\n\nDraft\n\n\nUnder review\n\n\nRejected\n\n\nPublished\n\n\nUnpublished\n\n\n\n\nFiletypes\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nname\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\nNota:\n a los fines del seedeo, los tipos de archivo son:\n\n\n\n\ncsv\n\n\nhtml\n\n\nics\n\n\npdf\n\n\nrar\n\n\nshp\n\n\nxls\n\n\nxml\n\n\nzip\n\n\n\n\nFiles\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nname\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nTipo:\n string\n\n\nMax:\n 350 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nnotes\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nurl\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nvisibility\n\n\nTipo:\n boolean\n\n\n\n\n\n\n\n\n\n\n\n\npublishedAt\n\n\nTipo:\n datetime\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\nClaves For\u00e1neas\n\n\n\n\n\n\ntype\n\n\nEl ID del tipo de archivo.\n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nstatus\n\n\nEl ID del status que posee el archivo.\n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\norganization\n\n\nEl ID de la organizaci\u00f3n que provee los datos.\n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ndataset\n\n\nEl ID del dataset al que pertenece.\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres \n\n\n\n\n\n\n\n\n\n\n\n\ncreatedBy\n\n\nEl ID del usuario que cre\u00f3 el archivo.\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres \n\n\n\n\n\n\nDatabases\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nname\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncollection\n\n\nTipo:\n string\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nurl\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\nClaves For\u00e1neas\n\n\n\n\n\n\ncreatedBy\n\n\nEl ID del usuario que cre\u00f3 el archivo.\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres \n\n\n\n\n\n\nDatasets\n\n\n\n\n\n\nid\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\n\u00danico:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nname\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 150 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ndescription\n\n\nTipo:\n string\n\n\nMax:\n 350 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nnotes\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nvisibility\n\n\nTipo:\n boolean\n\n\n\n\n\n\n\n\n\n\n\n\nstarred\n\n\nTipo:\n boolean\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal1\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal2\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal3\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal4\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal5\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal6\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal7\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal8\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal9\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nOPTIONSal10\n\n\nTipo:\n string\n\n\nMax:\n 500 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\npublishedAt\n\n\nTipo:\n datetime\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\n\n\n\n\n\n\nupdatedAt\n\n\nTipo:\n datetime\n\n\nDefault:\n fecha y hora actuales\n\n\n\n\n\n\nClaves For\u00e1neas\n\n\n\n\n\n\ncategory\n\n\nEl ID de la categor\u00eda del dataset.\n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\nstatus\n\n\nEl ID del status que posee el archivo.\n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\norganization\n\n\nEl ID de la organizaci\u00f3n que provee los datos.\n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres\n\n\n\n\n\n\n\n\n\n\n\n\ncreatedBy\n\n\nEl ID del usuario que cre\u00f3 el dataset.\n\n\nTipo:\n string \n\n\nRequerido:\n s\u00ed\n\n\nMax:\n 15 car\u00e1cteres", 
            "title": "Sprint 1"
        }, 
        {
            "location": "/sprints/sprint-1/#alcance", 
            "text": "", 
            "title": "Alcance"
        }, 
        {
            "location": "/sprints/sprint-1/#objetivo", 
            "text": "Hacer el login y CRUD de los usuarios, crear la mayor\u00eda de las tablas de la base de datos y dejar prototipada buena parte de la interfaz del admin y una porci\u00f3n del frontend.", 
            "title": "Objetivo"
        }, 
        {
            "location": "/sprints/sprint-1/#no-entra", 
            "text": "", 
            "title": "No Entra"
        }, 
        {
            "location": "/sprints/sprint-1/#files", 
            "text": "Etiquetas  Usuario responsable  Frecuencia de actualizaci\u00f3n  Parseo y guardado de datos en la base de datos no relacional (CSVs)", 
            "title": "Files"
        }, 
        {
            "location": "/sprints/sprint-1/#datasets", 
            "text": "Etiquetas  Usuario responsable", 
            "title": "Datasets"
        }, 
        {
            "location": "/sprints/sprint-1/#repositorios", 
            "text": "API:   https://github.com/gcba-odin/odin  Admin:   https://github.com/gcba-odin/odin-admin  Frontend:   https://github.com/gcba-odin/odin-frontend", 
            "title": "Repositorios"
        }, 
        {
            "location": "/sprints/sprint-1/#tareas", 
            "text": "", 
            "title": "Tareas"
        }, 
        {
            "location": "/sprints/sprint-1/#api", 
            "text": "Escribir spec (en Api Blueprint) con los contenidos de este sprint  Crear seed para la base de datos, con 3 - 5 elementos de cada entidad   Desarrollar endpoints.  Nota 1:  en ning\u00fan caso los campos id, createdAt y updatedAt deben ser editables a trav\u00e9s de la API. Son campos que se crean y actualizan (updatedAt) autom\u00e1ticamente, y en todo otro caso deben ser de s\u00f3lo lectura.  Nota 2:  la API s\u00f3lo debe aceptar requests con body en JSON. Por lo tanto las requests con body deben contener la cabecera  Content-Type  con el valor  application/json . Caso contrario, la API debe devolver un error.    Correr tests de Dredd   Desarrollar subida de archivos  Desarrollar parseo y guardado de datos en la base de datos no relacional  Instalar y configurar sails-permissions", 
            "title": "API"
        }, 
        {
            "location": "/sprints/sprint-1/#input-yeoman", 
            "text": "Application questions:\n? Application name odin\n\nConfiguration questions:\n? Database name odin\n? Enable CORS? Yes\n\nLogger questions:\n? Choose which logger you want to configure Winston\n\nBlueprint questions:\n? Use overridden blueprints? Yes\n\nController questions:\n? Choose which predefined controllers you want to copy (Press  space  to select)PingController, SearchController\n\nHook questions:\n? Choose which predefined hooks you want to copy (Press  space  to select)CountHook, PluralizeHook\n\nCron questions:\n? Do you need cron? Yes\n\nSwagger questions:\n? Do you need Swagger UI Explorer? No\n\nAuthentication questions:\n? Do you need authentication layer? Yes\n\nService questions:\n? Select which services you want to use CipherService, HashService, MailerService, StorageService\n? Mailer provider direct\n? Storage provider Local  Guardar la secret key generada en Google Drive.", 
            "title": "Input Yeoman"
        }, 
        {
            "location": "/sprints/sprint-1/#admin", 
            "text": "Login (funcional)  CRUD de users (funcional)  CRUD de organizations (s\u00f3lo UI)  CRUD de statuses (s\u00f3lo UI)  CRUD de filetypes (s\u00f3lo UI)  CRUD de files (s\u00f3lo UI)  CRUD de databases (s\u00f3lo UI)  CRUD de datasets (s\u00f3lo UI)", 
            "title": "Admin"
        }, 
        {
            "location": "/sprints/sprint-1/#frontend", 
            "text": "Landing page (home, s\u00f3lo UI)  Listado datasets (s\u00f3lo UI)  Ver dataset (s\u00f3lo UI)", 
            "title": "Frontend"
        }, 
        {
            "location": "/sprints/sprint-1/#prioridades", 
            "text": "Login  CRUD de usuarios", 
            "title": "Prioridades"
        }, 
        {
            "location": "/sprints/sprint-1/#endpoints", 
            "text": "", 
            "title": "Endpoints"
        }, 
        {
            "location": "/sprints/sprint-1/#users", 
            "text": "GET     /users\nPOST    /users\nHEAD    /users\nOPTIONS  /users\n\nGET     /users/first\nHEAD    /users/first\nOPTIONS  /users/first\n\nGET     /users/last\nHEAD    /users/last\nOPTIONS  /users/last\n\nGET     /users/count\nHEAD    /users/count\nOPTIONS  /users/count\n\nGET     /users/:id\nPATCH   /users/:id\nDELETE  /users/:id\nHEAD    /users/:id\nOPTIONS  /users/:id\n\nGET     /users/login\nPOST    /users/login\nHEAD    /users/login\nOPTIONS  /users/login", 
            "title": "Users"
        }, 
        {
            "location": "/sprints/sprint-1/#organizations", 
            "text": "GET     /organizations\nPOST    /organizations\nHEAD    /organizations\nOPTIONS  /organizations\n\nGET     /organizations/first\nHEAD    /organizations/first\nOPTIONS  /organizations/first\n\nGET     /organizations/last\nHEAD    /organizations/last\nOPTIONS  /organizations/last\n\nGET     /organizations/count\nHEAD    /organizations/count\nOPTIONS  /organizations/count\n\nGET     /organizations/:id\nPATCH   /organizations/:id\nDELETE  /organizations/:id\nHEAD    /organizations/:id\nOPTIONS  /organizations/:id", 
            "title": "Organizations"
        }, 
        {
            "location": "/sprints/sprint-1/#categories", 
            "text": "GET     /categories\nPOST    /categories\nHEAD    /categories\nOPTIONS  /categories\n\nGET     /categories/first\nHEAD    /categories/first\nOPTIONS  /categories/first\n\nGET     /categories/last\nHEAD    /categories/last\nOPTIONS  /categories/last\n\nGET     /categories/count\nHEAD    /categories/count\nOPTIONS  /categories/count\n\nGET     /categories/:id\nPATCH   /categories/:id\nDELETE  /categories/:id\nHEAD    /categories/:id\nOPTIONS  /categories/:id", 
            "title": "Categories"
        }, 
        {
            "location": "/sprints/sprint-1/#statuses", 
            "text": "GET     /statuses\nPOST    /statuses\nHEAD    /statuses\nOPTIONS  /statuses\n\nGET     /statuses/first\nHEAD    /statuses/first\nOPTIONS  /statuses/first\n\nGET     /statuses/last\nHEAD    /statuses/last\nOPTIONS  /statuses/last\n\nGET     /statuses/count\nHEAD    /statuses/count\nOPTIONS  /statuses/count\n\nGET     /statuses/:id\nPATCH   /statuses/:id\nDELETE  /statuses/:id\nHEAD    /statuses/:id\nOPTIONS  /statuses/:id", 
            "title": "Statuses"
        }, 
        {
            "location": "/sprints/sprint-1/#filetypes", 
            "text": "GET     /filetypes\nPOST    /filetypes\nHEAD    /filetypes\nOPTIONS  /filetypes\n\nGET     /filetypes/first\nHEAD    /filetypes/first\nOPTIONS  /filetypes/first\n\nGET     /filetypes/last\nHEAD    /filetypes/last\nOPTIONS  /filetypes/last\n\nGET     /filetypes/count\nHEAD    /filetypes/count\nOPTIONS  /filetypes/count\n\nGET     /filetypes/:id\nPATCH   /filetypes/:id\nDELETE  /filetypes/:id\nHEAD    /filetypes/:id\nOPTIONS  /filetypes/:id", 
            "title": "Filetypes"
        }, 
        {
            "location": "/sprints/sprint-1/#files_1", 
            "text": "GET     /files\nPOST    /files\nHEAD    /files\nOPTIONS  /files\n\nGET     /files/first\nHEAD    /files/first\nOPTIONS  /files/first\n\nGET     /files/last\nHEAD    /files/last\nOPTIONS  /files/last\n\nGET     /files/count\nHEAD    /files/count\nOPTIONS  /files/count\n\nGET     /files/:id\nPATCH   /files/:id\nDELETE  /files/:id\nHEAD    /files/:id\nOPTIONS  /files/:id", 
            "title": "Files"
        }, 
        {
            "location": "/sprints/sprint-1/#databases", 
            "text": "GET     /databases\nPOST    /databases\nHEAD    /databases\nOPTIONS  /databases\n\nGET     /databases/first\nHEAD    /databases/first\nOPTIONS  /databases/first\n\nGET     /databases/last\nHEAD    /databases/last\nOPTIONS  /databases/last\n\nGET     /databases/count\nHEAD    /databases/count\nOPTIONS  /databases/count\n\nGET     /databases/:id\nPATCH   /databases/:id\nDELETE  /databases/:id\nHEAD    /databases/:id\nOPTIONS  /databases/:id", 
            "title": "Databases"
        }, 
        {
            "location": "/sprints/sprint-1/#datasets_1", 
            "text": "GET     /datasets\nPOST    /datasets\nHEAD    /datasets\nOPTIONS  /datasets\n\nGET     /datasets/first\nHEAD    /datasets/first\nOPTIONS  /datasets/first\n\nGET     /datasets/last\nHEAD    /datasets/last\nOPTIONS  /datasets/last\n\nGET     /datasets/count\nHEAD    /datasets/count\nOPTIONS  /datasets/count\n\nGET     /datasets/:id\nPATCH   /datasets/:id\nDELETE  /datasets/:id\nHEAD    /datasets/:id\nOPTIONS  /datasets/:id", 
            "title": "Datasets"
        }, 
        {
            "location": "/sprints/sprint-1/#estructura-de-las-responses", 
            "text": "", 
            "title": "Estructura de las responses"
        }, 
        {
            "location": "/sprints/sprint-1/#get", 
            "text": "Si no hay errores. En el caso de que se devuelva un solo registro, en data no va un array, sino ese registro s\u00f3lo. Y si no hay registros, en data habr\u00e1 un objeto vac\u00edo.  {\n    meta : {\n        statusCode : ...,\n        statusMessage : ..,\n   },\n    data : [\n     {\n         ...\n     }, \n     {\n         ...\n     }, \n     {\n         ...\n     }  \n   ],\n    links : {\n       ...\n   }\n}  Si hay error/es:  {\n    meta : {\n        statusCode : ...,\n        statusMessage : ..\n   },\n    error : \n     {\n         ...\n     }, \n    links : {\n       ...\n   }\n}", 
            "title": "GET"
        }, 
        {
            "location": "/sprints/sprint-1/#post", 
            "text": "{\n    meta : {\n        statusCode : ...,\n        statusMessage : ..,\n   },\n    links : {\n       ...\n   }\n}", 
            "title": "POST"
        }, 
        {
            "location": "/sprints/sprint-1/#patch", 
            "text": "Si hubo error/es incluir objeto \"error\" como en GET.  {\n     meta : {\n        statusCode : ...,\n        statusMessage : ..,\n   },\n    links : {\n       ...\n   }\n}", 
            "title": "PATCH"
        }, 
        {
            "location": "/sprints/sprint-1/#delete", 
            "text": "Si hubo error/es incluir objeto \"error\" como en GET.  {\n     meta : {\n        statusCode : ...,\n        statusMessage : ..,\n   },\n    links : {\n       ...\n   }\n}", 
            "title": "DELETE"
        }, 
        {
            "location": "/sprints/sprint-1/#head", 
            "text": "Una response a una request HEAD no incluye un body.", 
            "title": "HEAD"
        }, 
        {
            "location": "/sprints/sprint-1/#options", 
            "text": "Si hubo error/es incluir objeto \"error\" como en GET.  {\n     meta : {\n        statusCode : ...,\n        statusMessage : ..,\n   },\n    methods : {\n       {\n            url : ...,\n            headers : {\n               ...\n           },\n            parameters : {\n               ...\n           }\n       },\n   },\n    links : {\n       ...\n   }\n}", 
            "title": "OPTIONS"
        }, 
        {
            "location": "/sprints/sprint-1/#base-de-datos", 
            "text": "", 
            "title": "Base de datos"
        }, 
        {
            "location": "/sprints/sprint-1/#users_1", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       username  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  25 car\u00e1cteres       password  Tipo:  string  Requerido:  s\u00ed        email  Tipo:  email  Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  250 car\u00e1cteres       firstName  Tipo:  string  Max:  50 car\u00e1cteres  Default:  '' (empty string)       lastName  Tipo:  string  Max:  100 car\u00e1cteres  Default:  '' (empty string)       avatar  Tipo:  string  Max:  500 car\u00e1cteres       active  Tipo:  boolean       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales", 
            "title": "Users"
        }, 
        {
            "location": "/sprints/sprint-1/#claves-foraneas", 
            "text": "organization  El ID de la organizaci\u00f3n a que pertenece. En el caso del Admin (usuario 1) por el momento ser\u00e1 la primera organizaci\u00f3n generada por el seedeo de la base de datos (ej. \"Organizaci\u00f3n 1\").  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres       createdBy  El ID del admin que cre\u00f3 el usuario. En el caso del Admin (usuario 1), es s\u00ed mismo (1).  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres", 
            "title": "Claves For\u00e1neas"
        }, 
        {
            "location": "/sprints/sprint-1/#calculados", 
            "text": "fullName  Es el resultado de concatenar firstName y lastName, separados por un espacio en blanco.  Tipo:  string  Ejemplo:  Juan P\u00e9rez", 
            "title": "Calculados"
        }, 
        {
            "location": "/sprints/sprint-1/#organizations_1", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       name  Tipo:  string   Requerido:  s\u00ed  Max:  150 car\u00e1cteres       description  Tipo:  string  Max:  350 car\u00e1cteres       address  Tipo:  string  Max:  150 car\u00e1cteres       active  Tipo:  boolean       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales", 
            "title": "Organizations"
        }, 
        {
            "location": "/sprints/sprint-1/#claves-foraneas_1", 
            "text": "parent  El ID de la organizaci\u00f3n a que pertenece. En caso de una organizaci\u00f3n que no depende de alguna otra existente en la base de datos, va NULL.  Tipo:  string   Max:  15 car\u00e1cteres       createdBy  El ID del usuario que cre\u00f3 la organizaci\u00f3n.  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres", 
            "title": "Claves For\u00e1neas"
        }, 
        {
            "location": "/sprints/sprint-1/#categories_1", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       name  Tipo:  string   Requerido:  s\u00ed  Max:  150 car\u00e1cteres       description  Tipo:  string  Max:  350 car\u00e1cteres       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales", 
            "title": "Categories"
        }, 
        {
            "location": "/sprints/sprint-1/#claves-foraneas_2", 
            "text": "createdBy  El ID del usuario que cre\u00f3 la categor\u00eda.  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres", 
            "title": "Claves For\u00e1neas"
        }, 
        {
            "location": "/sprints/sprint-1/#statuses_1", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       name  Tipo:  string   Requerido:  s\u00ed  Max:  150 car\u00e1cteres       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales     Nota:  a los fines del seedeo, los estados por recurso son:   Draft  Under review  Rejected  Published  Unpublished", 
            "title": "Statuses"
        }, 
        {
            "location": "/sprints/sprint-1/#filetypes_1", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       name  Tipo:  string   Requerido:  s\u00ed  Max:  150 car\u00e1cteres       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales     Nota:  a los fines del seedeo, los tipos de archivo son:   csv  html  ics  pdf  rar  shp  xls  xml  zip", 
            "title": "Filetypes"
        }, 
        {
            "location": "/sprints/sprint-1/#files_2", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       name  Tipo:  string   Requerido:  s\u00ed  Max:  150 car\u00e1cteres       description  Tipo:  string  Max:  350 car\u00e1cteres       notes  Tipo:  string  Max:  500 car\u00e1cteres       url  Tipo:  string  Max:  500 car\u00e1cteres       visibility  Tipo:  boolean       publishedAt  Tipo:  datetime       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales", 
            "title": "Files"
        }, 
        {
            "location": "/sprints/sprint-1/#claves-foraneas_3", 
            "text": "type  El ID del tipo de archivo.  Requerido:  s\u00ed  Max:  15 car\u00e1cteres       status  El ID del status que posee el archivo.  Requerido:  s\u00ed  Max:  15 car\u00e1cteres       organization  El ID de la organizaci\u00f3n que provee los datos.  Requerido:  s\u00ed  Max:  15 car\u00e1cteres       dataset  El ID del dataset al que pertenece.  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres        createdBy  El ID del usuario que cre\u00f3 el archivo.  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres", 
            "title": "Claves For\u00e1neas"
        }, 
        {
            "location": "/sprints/sprint-1/#databases_1", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       name  Tipo:  string   Requerido:  s\u00ed  Max:  150 car\u00e1cteres       collection  Tipo:  string  Max:  150 car\u00e1cteres       url  Tipo:  string  Max:  500 car\u00e1cteres       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales", 
            "title": "Databases"
        }, 
        {
            "location": "/sprints/sprint-1/#claves-foraneas_4", 
            "text": "createdBy  El ID del usuario que cre\u00f3 el archivo.  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres", 
            "title": "Claves For\u00e1neas"
        }, 
        {
            "location": "/sprints/sprint-1/#datasets_2", 
            "text": "id  Tipo:  string   Requerido:  s\u00ed  \u00danico:  s\u00ed  Max:  15 car\u00e1cteres       name  Tipo:  string   Requerido:  s\u00ed  Max:  150 car\u00e1cteres       description  Tipo:  string  Max:  350 car\u00e1cteres       notes  Tipo:  string  Max:  500 car\u00e1cteres       visibility  Tipo:  boolean       starred  Tipo:  boolean       OPTIONSal1  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal2  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal3  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal4  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal5  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal6  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal7  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal8  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal9  Tipo:  string  Max:  500 car\u00e1cteres       OPTIONSal10  Tipo:  string  Max:  500 car\u00e1cteres       publishedAt  Tipo:  datetime       createdAt  Tipo:  datetime  Default:  fecha y hora actuales       updatedAt  Tipo:  datetime  Default:  fecha y hora actuales", 
            "title": "Datasets"
        }, 
        {
            "location": "/sprints/sprint-1/#claves-foraneas_5", 
            "text": "category  El ID de la categor\u00eda del dataset.  Requerido:  s\u00ed  Max:  15 car\u00e1cteres       status  El ID del status que posee el archivo.  Requerido:  s\u00ed  Max:  15 car\u00e1cteres       organization  El ID de la organizaci\u00f3n que provee los datos.  Requerido:  s\u00ed  Max:  15 car\u00e1cteres       createdBy  El ID del usuario que cre\u00f3 el dataset.  Tipo:  string   Requerido:  s\u00ed  Max:  15 car\u00e1cteres", 
            "title": "Claves For\u00e1neas"
        }, 
        {
            "location": "/references/status-codes/", 
            "text": "\u00c9xito\n\n\n\n\n\n\n\n\nSuccess\n\n\n\n\n\n\n\n\n\n\n\n\n200 OK\n\n\nC\u00f3digo gen\u00e9rico de \u00e9xito.\n\n\n\n\n\n\n201 Created\n\n\nIndica que el recurso fue creado exitosamente.\n\n\n\n\n\n\n202 Accepted\n\n\nSe acept\u00f3 la request, pero todav\u00eda no fue procesada. \u00datil para requests as\u00edncronas.\n\n\n\n\n\n\n204 No Content\n\n\nLa request fue procesada con \u00e9xito, pero no hay nada que mostrar. Por ejemplo, despu\u00e9s de un DELETE exitoso.\n\n\n\n\n\n\n206 Partial Content\n\n\nEl recurso devuelto est\u00e1 incompleto. Se lo suele usar para contenido que ha sido paginado. Por ejemplo, se devuelve la p\u00e1gina 5 de 20.\n\n\n\n\n\n\n\n\nError del cliente\n\n\n\n\n\n\n\n\nClient Error\n\n\n\n\n\n\n\n\n\n\n\n\n400 Bad Request\n\n\nError gen\u00e9rico para una request que no puede ser procesada por el servidor.\n\n\n\n\n\n\n401 Unauthorized\n\n\nEl cliente es desconocido para la API y necesita autenticarse primero.\n\n\n\n\n\n\n403 Forbidden\n\n\nLos permisos del cliente no son suficientes para acceder a este recurso. Es decir, el recurso es un recurso protegido (desde la perspectiva del usuario que hizo la request).\n\n\n\n\n\n\n404 Not Found\n\n\nNo existe el recurso pedido por el cliente.\n\n\n\n\n\n\n405 Method Not Allowed\n\n\nEl usuario no tiene permiso para usar ese m\u00e9todo HTTP en particular.\n\n\n\n\n\n\n406 Not Acceptable\n\n\nEl contenido no est\u00e1 disponible en la forma espec\u00edfica en que lo pidi\u00f3 el cliente (por medio de las cabeceras \"Accept-*\"). Por ejemplo, el cliente pidi\u00f3 un recurso en XML pero s\u00f3lo est\u00e1 disponible en JSON.\n\n\n\n\n\n\n410 Gone\n\n\nIndica que el recurso estaba disponible pero ya no m\u00e1s (de manera permanente).\n\n\n\n\n\n\n415 Unsupported Media Type\n\n\nLa request tiene un media type que no est\u00e1 admitido por el servidor. Por ejemplo, el cliente ha subido una imagen en SVG pero el servidor s\u00f3lo recibe JPG o PNG.\n\n\n\n\n\n\n\n\nError del servidor\n\n\n\n\n\n\n\n\nServer Error\n\n\n\n\n\n\n\n\n\n\n\n\n500 Internal Server Error\n\n\nLa request parece estar bien, pero hubo un problema en el servidor. El cliente no tiene nada que ver, y tampoco puede hacer nada al respecto.\n\n\n\n\n\n\n501 Not Implemented\n\n\nLa API no ha implementado el m\u00e9todo usado para hacer la request. Por ejemplo, el m\u00e9todo PUT.", 
            "title": "HTTP Status Codes"
        }, 
        {
            "location": "/references/status-codes/#exito", 
            "text": "Success       200 OK  C\u00f3digo gen\u00e9rico de \u00e9xito.    201 Created  Indica que el recurso fue creado exitosamente.    202 Accepted  Se acept\u00f3 la request, pero todav\u00eda no fue procesada. \u00datil para requests as\u00edncronas.    204 No Content  La request fue procesada con \u00e9xito, pero no hay nada que mostrar. Por ejemplo, despu\u00e9s de un DELETE exitoso.    206 Partial Content  El recurso devuelto est\u00e1 incompleto. Se lo suele usar para contenido que ha sido paginado. Por ejemplo, se devuelve la p\u00e1gina 5 de 20.", 
            "title": "\u00c9xito"
        }, 
        {
            "location": "/references/status-codes/#error-del-cliente", 
            "text": "Client Error       400 Bad Request  Error gen\u00e9rico para una request que no puede ser procesada por el servidor.    401 Unauthorized  El cliente es desconocido para la API y necesita autenticarse primero.    403 Forbidden  Los permisos del cliente no son suficientes para acceder a este recurso. Es decir, el recurso es un recurso protegido (desde la perspectiva del usuario que hizo la request).    404 Not Found  No existe el recurso pedido por el cliente.    405 Method Not Allowed  El usuario no tiene permiso para usar ese m\u00e9todo HTTP en particular.    406 Not Acceptable  El contenido no est\u00e1 disponible en la forma espec\u00edfica en que lo pidi\u00f3 el cliente (por medio de las cabeceras \"Accept-*\"). Por ejemplo, el cliente pidi\u00f3 un recurso en XML pero s\u00f3lo est\u00e1 disponible en JSON.    410 Gone  Indica que el recurso estaba disponible pero ya no m\u00e1s (de manera permanente).    415 Unsupported Media Type  La request tiene un media type que no est\u00e1 admitido por el servidor. Por ejemplo, el cliente ha subido una imagen en SVG pero el servidor s\u00f3lo recibe JPG o PNG.", 
            "title": "Error del cliente"
        }, 
        {
            "location": "/references/status-codes/#error-del-servidor", 
            "text": "Server Error       500 Internal Server Error  La request parece estar bien, pero hubo un problema en el servidor. El cliente no tiene nada que ver, y tampoco puede hacer nada al respecto.    501 Not Implemented  La API no ha implementado el m\u00e9todo usado para hacer la request. Por ejemplo, el m\u00e9todo PUT.", 
            "title": "Error del servidor"
        }, 
        {
            "location": "/links/backend/", 
            "text": "Utils\n\n\n\n\nsails-hook-autoreload\n\n\nSails JS hook to autoreload controllers, models, services and locales when changed.\nThis hook is to help with situations where you are rapidly prototyping/tinkering with app code and don't want to have to keep quitting/restarting Sails to see your changes. It is not intended to be used in a production environment.\n\n\n\n\n\n\n\n\nAPI\n\n\n\n\n\n\nAPI Blueprint\n\n\n\n\nAPI Blueprint. A powerful high-level API description language for web APIs.\n\n\n\n\n\n\n\n\nApiary Editor\n\n\n\n\nThe Apiary Editor is the foundation of your API design. Apiary Editor supports API Blueprint and Swagger API Description languages.\n\n\n\n\n\n\n\n\ngenerator-sails-rest-api\n\n\n\n\nYeoman generator for scaffolding Sails REST API with predefined features.\n\n\n\n\n\n\n\n\nshortid\n\n\n\n\nShort id generator. Url-friendly. Non-predictable. Cluster-compatible.\n\n\n\n\n\n\n\n\nsails-hook-pagify\n\n\n\n\nGenerate pagination data and metadata for Sails JS projects.\n\n\n\n\n\n\n\n\nsails-hook-blueprint-count\n\n\n\n\nAdds blueprint api method to count records in database.\n\n\n\n\n\n\n\n\nsails-hook-query-builder\n\n\n\n\nSails hook for creating waterline queries from request queries.\nQuery builder adds a static method to all models in a sails app that allows creates a query which will paginate, search and sort.\n\n\n\n\n\n\n\n\nnode-rss\n\n\n\n\nRSS feed generator. Add RSS feeds to any project. Supports enclosures and GeoRSS.\n\n\n\n\n\n\n\n\nModels\n\n\n\n\n\n\nsails-hook-validation\n\n\n\n\nCustom validation error messages for sails model with i18n support.\n\n\n\n\n\n\n\n\nsails-hook-model-extra\n\n\n\n\nAdditional model methods for sails.\nThe following methods will be added to all models once hook is installed.\n\n\n\n\n\n\n\n\ncountAndFind(criteria, callback)\ncountAndSearch(searchTerm, callback)\nfirst(howMany, callback)\nlast(howMany, callback)\nsearch(searchTerm, callback)\nsoftDelete(criteria, callback)\n\n\n\n\nSecurity\n\n\n\n\n\n\nsails-permissions\n\n\n\n\nComprehensive user permissions and entitlements system for sails.js and Waterline. Supports user authentication with passport.js, role-based permissioning, object ownership, and row-level security.\n\n\n\n\n\n\n\n\nsails-hook-allowed-hosts\n\n\n\n\nSails hook to ensure requests can only come in from a whitelisted set of hosts.\n    Works with both hosts and IP adresses.\n\n\n\n\n\n\n\n\nSeeding\n\n\n\n\nsails-hook-fixtures\n\n\nInstallable hook that injects fixtures into your sails ORM at runtime. With associations!\n\n\n\n\n\n\n\n\nLogging\n\n\n\n\n\n\nsails-hook-events\n\n\n\n\nUse events to manage and observe Waterline models' lifecycle\nThis hook allows you to use event-driven programming when working with your Waterline models. It adds new events emitted from your Sails.js instance that you can subscribe to and perform actions when such an event is emitted.\n\n\n\n\n\n\n\n\nsails-hook-winston\n\n\n\n\nIntegrates winston logging system with your Sails application.\n\n\n\n\n\n\n\n\nPlugins\n\n\n\n\nmarlinspike\n\n\nSuperpowers for your Sails.js Hooks.\nMakes it easy to build and maintain Sails Hooks as separate projects.\nMagically extend Sails apps with additional Model, Controllers, Services.\n\n\n\n\n\n\n\n\nAnalytics\n\n\n\n\nsails-hook-apianalytics\n\n\nA Sails hook for logging detailed request metadata and monitoring your API.", 
            "title": "Backend"
        }, 
        {
            "location": "/links/backend/#utils", 
            "text": "sails-hook-autoreload  Sails JS hook to autoreload controllers, models, services and locales when changed.\nThis hook is to help with situations where you are rapidly prototyping/tinkering with app code and don't want to have to keep quitting/restarting Sails to see your changes. It is not intended to be used in a production environment.", 
            "title": "Utils"
        }, 
        {
            "location": "/links/backend/#api", 
            "text": "API Blueprint   API Blueprint. A powerful high-level API description language for web APIs.     Apiary Editor   The Apiary Editor is the foundation of your API design. Apiary Editor supports API Blueprint and Swagger API Description languages.     generator-sails-rest-api   Yeoman generator for scaffolding Sails REST API with predefined features.     shortid   Short id generator. Url-friendly. Non-predictable. Cluster-compatible.     sails-hook-pagify   Generate pagination data and metadata for Sails JS projects.     sails-hook-blueprint-count   Adds blueprint api method to count records in database.     sails-hook-query-builder   Sails hook for creating waterline queries from request queries.\nQuery builder adds a static method to all models in a sails app that allows creates a query which will paginate, search and sort.     node-rss   RSS feed generator. Add RSS feeds to any project. Supports enclosures and GeoRSS.", 
            "title": "API"
        }, 
        {
            "location": "/links/backend/#models", 
            "text": "sails-hook-validation   Custom validation error messages for sails model with i18n support.     sails-hook-model-extra   Additional model methods for sails.\nThe following methods will be added to all models once hook is installed.     countAndFind(criteria, callback)\ncountAndSearch(searchTerm, callback)\nfirst(howMany, callback)\nlast(howMany, callback)\nsearch(searchTerm, callback)\nsoftDelete(criteria, callback)", 
            "title": "Models"
        }, 
        {
            "location": "/links/backend/#security", 
            "text": "sails-permissions   Comprehensive user permissions and entitlements system for sails.js and Waterline. Supports user authentication with passport.js, role-based permissioning, object ownership, and row-level security.     sails-hook-allowed-hosts   Sails hook to ensure requests can only come in from a whitelisted set of hosts.\n    Works with both hosts and IP adresses.", 
            "title": "Security"
        }, 
        {
            "location": "/links/backend/#seeding", 
            "text": "sails-hook-fixtures  Installable hook that injects fixtures into your sails ORM at runtime. With associations!", 
            "title": "Seeding"
        }, 
        {
            "location": "/links/backend/#logging", 
            "text": "sails-hook-events   Use events to manage and observe Waterline models' lifecycle\nThis hook allows you to use event-driven programming when working with your Waterline models. It adds new events emitted from your Sails.js instance that you can subscribe to and perform actions when such an event is emitted.     sails-hook-winston   Integrates winston logging system with your Sails application.", 
            "title": "Logging"
        }, 
        {
            "location": "/links/backend/#plugins", 
            "text": "marlinspike  Superpowers for your Sails.js Hooks.\nMakes it easy to build and maintain Sails Hooks as separate projects.\nMagically extend Sails apps with additional Model, Controllers, Services.", 
            "title": "Plugins"
        }, 
        {
            "location": "/links/backend/#analytics", 
            "text": "sails-hook-apianalytics  A Sails hook for logging detailed request metadata and monitoring your API.", 
            "title": "Analytics"
        }, 
        {
            "location": "/links/frontend/", 
            "text": "SDK\n\n\n\n\n\n\nAdminLTE\n\n\n\n\nFree Premium Admin control Panel Theme That Is Based On Bootstrap 3.x.\n\n\n\n\n\n\n\n\nAngular-AdminLTE\n\n\n\n\nAngularjsApp Implementation on top of renowned Admin-LTE theme.\n\n\n\n\n\n\n\n\nsails.io.js\n\n\n\n\nBrowser SDK for communicating w/ Sails via sockets.\nThe sails.io.js client comes automatically installed in new Sails projects, but there is nothing project-specific about the client SDK. You can just as easily copy and paste it yourself, get it from Bower, or just link a script tag directly to a hosted CDN.", 
            "title": "Frontend"
        }, 
        {
            "location": "/links/frontend/#sdk", 
            "text": "AdminLTE   Free Premium Admin control Panel Theme That Is Based On Bootstrap 3.x.     Angular-AdminLTE   AngularjsApp Implementation on top of renowned Admin-LTE theme.     sails.io.js   Browser SDK for communicating w/ Sails via sockets.\nThe sails.io.js client comes automatically installed in new Sails projects, but there is nothing project-specific about the client SDK. You can just as easily copy and paste it yourself, get it from Bower, or just link a script tag directly to a hosted CDN.", 
            "title": "SDK"
        }
    ]
}